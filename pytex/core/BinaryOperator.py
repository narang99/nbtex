
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/BinaryOperator.ipynb
from pytex.LatexInterface import Operator, Set, LatexStringFormatter
from pytex.core.Precedence import PRECEDENCE
from pytex.core.BasicOperator import BasicOperator

class BinaryOperator(BasicOperator):
    def __init__(self, precedence, operator, inverted_operator=None):
        self._operator, self._inverted_operator = operator, inverted_operator

    def __call__(self, left, right):
        op = self._operator
        if self._is_inverted and self._inverted_operator is not None:
            op = self._inverted_operator
        return (LatexStringFormatter
                .binary_operation_output(op, left, right))

Plus = BinaryOperator(PRECEDENCE.ARITHMATIC_ADD, Operator.plus)
Minus = BinaryOperator(PRECEDENCE.ARITHMATIC_ADD, Operator.minus)
Multiply = BinaryOperator(PRECEDENCE.ARITHMATIC_MULT, Operator.multiply)
Equal = BinaryOperator(PRECEDENCE.EQUALITY, Operator.eq, Operator.neq)
LessThan = BinaryOperator(PRECEDENCE.COMPARE, Operator.lt, Operator.nless)
LessThanEqual = BinaryOperator(PRECEDENCE.COMPARE, Operator.leq, Operator.nleq)
GreaterThan = BinaryOperator(PRECEDENCE.COMPARE, Operator.gt, Operator.ngtr)
GreaterThanEqual = BinaryOperator(PRECEDENCE.COMPARE, Operator.geq, Operator.ngeq)
Power = BinaryOperator(PRECEDENCE.POWER, Operator.power)
Space = BinaryOperator(PRECEDENCE.EQUALITY, Operator.space)
