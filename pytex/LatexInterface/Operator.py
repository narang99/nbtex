
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/Operator.ipynb
class OperatorSymbols():
    def __init__(self):
        pass
    @property
    def plus(self):
        return '+'
    @property
    def minus(self):
        return '-'
    @property
    def multiply(self):
        return '*'
    @property
    def power(self):
        return '^'
    @property
    def space(self):
        return ' '
    @property
    def eq(self):
        return '='
    @property
    def lt(self):
        return '<'
    @property
    def leq(self):
        return (r'\leq')
    @property
    def leqq(self):
        return (r'\leqq')
    @property
    def leqslant(self):
        return (r'\leqslant')
    @property
    def gt(self):
        return '>'
    @property
    def geq(self):
        return (r'\geq')
    @property
    def geqq(self):
        return (r'\geqq')
    @property
    def geqslant(self):
        return (r'\geqslant')
    @property
    def nless(self):
        return (r'\nless')
    @property
    def nleq(self):
        return (r'\nleq')
    @property
    def lneq(self):
        return (r'\lneq')
    @property
    def nleqq(self):
        return (r'\nleqq')
    @property
    def lneqq(self):
        return (r'\lneqq')
    @property
    def lvertneqq(self):
        return (r'\lvertneqq')
    @property
    def nleqslant(self):
        return (r'\nleqslant')
    @property
    def ngtr(self):
        return (r'\ngtr')
    @property
    def ngeq(self):
        return (r'\ngeq')
    @property
    def gneq(self):
        return (r'\gneq')
    @property
    def ngeqq(self):
        return (r'\ngeqq')
    @property
    def gneqq(self):
        return (r'\gneqq')
    @property
    def gvertneqq(self):
        return (r'\gvertneqq')
    @property
    def ngeqslant(self):
        return (r'\ngeqslant')
    @property
    def vartriangleleft(self):
        return (r'\vartriangleleft')
    @property
    def trianglelefteq(self):
        return (r'\trianglelefteq')
    @property
    def lesssim(self):
        return (r'\lesssim')
    @property
    def lessapprox(self):
        return (r'\lessapprox')
    @property
    def prec(self):
        return (r'\prec')
    @property
    def preceq(self):
        return (r'\preceq')
    @property
    def precsim(self):
        return (r'\precsim')
    @property
    def precapprox(self):
        return (r'\precapprox')
    @property
    def vartriangleright(self):
        return (r'\vartriangleright')
    @property
    def trianglerighteq(self):
        return (r'\trianglerighteq')
    @property
    def gtrsim(self):
        return (r'\gtrsim')
    @property
    def gtrapprox(self):
        return (r'\gtrapprox')
    @property
    def succ(self):
        return (r'\succ')
    @property
    def succeq(self):
        return (r'\succeq')
    @property
    def succsim(self):
        return (r'\succsim')
    @property
    def succapprox(self):
        return (r'\succapprox')
    @property
    def ntriangleleft(self):
        return (r'\ntriangleleft')
    @property
    def ntrianglelefteq(self):
        return (r'\ntrianglelefteq')
    @property
    def lnsim(self):
        return (r'\lnsim')
    @property
    def lnapprox(self):
        return (r'\lnapprox')
    @property
    def nprec(self):
        return (r'\nprec')
    @property
    def npreceq(self):
        return (r'\npreceq')
    @property
    def precnsim(self):
        return (r'\precnsim')
    @property
    def precnapprox(self):
        return (r'\precnapprox')
    @property
    def ntriangleright(self):
        return (r'\ntriangleright')
    @property
    def ntrianglerighteq(self):
        return (r'\ntrianglerighteq')
    @property
    def gnsim(self):
        return (r'\gnsim')
    @property
    def gnapprox(self):
        return (r'\gnapprox')
    @property
    def nsucc(self):
        return (r'\nsucc')
    @property
    def nsucceq(self):
        return (r'\nsucceq')
    @property
    def succnsim(self):
        return (r'\succnsim')
    @property
    def succnapprox(self):
        return (r'\succnapprox')
    @property
    def eqslantless(self):
        return (r'\eqslantless')
    @property
    def lessgtr(self):
        return (r'\lessgtr')
    @property
    def lesseqgtr(self):
        return (r'\lesseqgtr')
    @property
    def lesseqqgtr(self):
        return (r'\lesseqqgtr')
    @property
    def eqslantgtr(self):
        return (r'\eqslantgtr')
    @property
    def gtrless(self):
        return (r'\gtrless')
    @property
    def gtreqless(self):
        return (r'\gtreqless')
    @property
    def gtreqqless(self):
        return (r'\gtreqqless')
    @property
    def ll(self):
        return (r'\ll')
    @property
    def lll(self):
        return (r'\lll')
    @property
    def lessdot(self):
        return (r'\lessdot')
    @property
    def preccurlyeq(self):
        return (r'\preccurlyeq')
    @property
    def curlyeqprec(self):
        return (r'\curlyeqprec')
    @property
    def gg(self):
        return (r'\gg')
    @property
    def ggg(self):
        return (r'\ggg')
    @property
    def gtrdot(self):
        return (r'\gtrdot')
    @property
    def succcurlyeq(self):
        return (r'\succcurlyeq')
    @property
    def curlyeqsucc(self):
        return (r'\curlyeqsucc')
    @property
    def neq(self):
        return (r'\neq')
    @property
    def equiv(self):
        return (r'\equiv')
    @property
    def thickapprox(self):
        return (r'\thickapprox')
    @property
    def approx(self):
        return (r'\approx')
    @property
    def approxeq(self):
        return (r'\approxeq')
    @property
    def cong(self):
        return (r'\cong')
    @property
    def ncong(self):
        return (r'\ncong')
    @property
    def sim(self):
        return (r'\sim')
    @property
    def thicksim(self):
        return (r'\thicksim')
    @property
    def nsim(self):
        return (r'\nsim')
    @property
    def simeq(self):
        return (r'\simeq')
    @property
    def backsim(self):
        return (r'\backsim')
    @property
    def backsimeq(self):
        return (r'\backsimeq')
    @property
    def eqsim(self):
        return (r'\eqsim')
    @property
    def doteq(self):
        return (r'\doteq')
    @property
    def div(self):
        return (r'\div')
    @property
    def doteqdot(self):
        return (r'\doteqdot')
    @property
    def fallingdotseq(self):
        return (r'\fallingdotseq')
    @property
    def risingdotseq(self):
        return (r'\risingdotseq')
    @property
    def triangleq(self):
        return (r'\triangleq')
    @property
    def circeq(self):
        return (r'\circeq')
    @property
    def eqcirc(self):
        return (r'\eqcirc')
    @property
    def bumpeq(self):
        return (r'\bumpeq')
    @property
    def Bumpeq(self):
        return (r'\Bumpeq')
    @property
    def asymp(self):
        return (r'\asymp')
    @property
    def mid(self):
        return (r'\mid')
    @property
    def shortmid(self):
        return (r'\shortmid')
    @property
    def vdash(self):
        return (r'\vdash')
    @property
    def dashv(self):
        return (r'\dashv')
    @property
    def Vdash(self):
        return (r'\Vdash')
    @property
    def parallel(self):
        return (r'\parallel')
    @property
    def shortparallel(self):
        return (r'\shortparallel')
    @property
    def vDash(self):
        return (r'\vDash')
    @property
    def Vvdash(self):
        return (r'\Vvdash')
    @property
    def models(self):
        return (r'\models')
    @property
    def nmid(self):
        return (r'\nmid')
    @property
    def nshortmid(self):
        return (r'\nshortmid')
    @property
    def nvdash(self):
        return (r'\nvdash')
    @property
    def nVdash(self):
        return (r'\nVdash')
    @property
    def nparallel(self):
        return (r'\nparallel')
    @property
    def nshortparallel(self):
        return (r'\nshortparallel')
    @property
    def nvDash(self):
        return (r'\nvDash')
    @property
    def nVDash(self):
        return (r'\nVDash')

Operator = OperatorSymbols()