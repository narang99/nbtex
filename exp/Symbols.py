
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/Symbols.ipynb
from exp.Variables import *

class PLSymbol(Var):
    def __init__(self, name, latex):
        super().__init__(name)
        self.latex = makeVar(latex)
    def build(self):
        return self.latex.build()

class PLSymbols():
    def __init__(self):
        pass
    @property
    def pi(self):
        return PLSymbol('pi', r'\pi')
    @property
    def Pi(self):
        return PLSymbol('Pi', r'\Pi')
    @property
    def alpha(self):
        return PLSymbol('alpha', r'\alpha')
    @property
    def Alpha(self):
        return PLSymbol('Alpha', r'\Alpha')
    @property
    def beta(self):
        return PLSymbol('beta', r'\beta')
    @property
    def Beta(self):
        return PLSymbol('Beta', r'\Beta')
    @property
    def gamma(self):
        return PLSymbol('gamma', r'\gamma')
    @property
    def delta(self):
        return PLSymbol('delta', r'\delta')
    @property
    def Delta(self):
        return PLSymbol('Delta', r'\Delta')
    @property
    def epsilon(self):
        return PLSymbol('epsilon', r'\epsilon')
    @property
    def zeta(self):
        return PLSymbol('zeta', r'\zeta')
    @property
    def varepsilon(self):
        return PLSymbol('varepsilon', r'\varepsilon')
    @property
    def eta(self):
        return PLSymbol('eta', r'\eta')
    @property
    def theta(self):
        return PLSymbol('theta', r'\theta')
    @property
    def vartheta(self):
        return PLSymbol('vartheta', r'\vartheta')
    @property
    def Theta(self):
        return PLSymbol('Theta', r'\Theta')
    @property
    def iota(self):
        return PLSymbol('iota', r'\iota')
    @property
    def kappa(self):
        return PLSymbol('kappa', r'\kappa')
    @property
    def lambd(self):
        return PLSymbol('lambd', r'\lambda')
    @property
    def Lambd(self):
        return PLSymbol('Lambd', r'\Lambda')
    @property
    def mu(self):
        return PLSymbol('mu', r'\mu')