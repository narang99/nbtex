
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/Functions.ipynb
from exp.Variables import makeVar, Var

class Sum(Var):
    def __init__(self, func, it='i', lower=None, upper=None):
        super().__init__('summation')
        self.it = makeVar(it)
        self.f = makeVar(func)
        self.lower, self.upper = lower, upper
    def __call__(self):
        # non callable
        pass
    def build(self):
        lower = ''
        if self.lower is not None:
            l = makeVar(self.lower)
            lower = r"_{" + self.it.build() + "=" + l.build() + "}"
        else:
            lower = r"_{" + self.it.build() + "}"
        upper = ''
        if self.upper is not None:
            u = makeVar(self.upper)
            upper = r"^" + r"{" + u.build() + "}"
        else: upper = ''
        return r"\sum" + lower + upper + ' ' + self.f.build()

class Partial(Var):
    def __init__(self, wrt):
        super().__init__(wrt)
    def build(self):
        return r"\frac{\partial}{\partial " + self.name + "}"